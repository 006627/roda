st-dispatcher {
  // single-thread dispatcher
  type = PinnedDispatcher
  executor = "thread-pool-executor"
} 
io-1-dispatcher {
  // number 1 multi-thread dispatcher
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 2
}
io-2-dispatcher {
  // number 2 multi-thread dispatcher
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
}

akka.actor.deployment {
    "/jobsManager" {
      dispatcher = st-dispatcher
    }
    "/jobsManager/JobsRouter" {
      dispatcher = io-1-dispatcher
    }
    "/jobsManager/JobsRouter/*" {
      dispatcher = io-1-dispatcher
    }
    "/jobsManager/JobsRouter/*/*" {
      dispatcher = io-1-dispatcher
    }
    "/jobsManager/JobsRouter/*/*/WorkersRouter" {
      dispatcher = io-2-dispatcher
    }
    "/jobsManager/JobsRouter/*/*/WorkersRouter/*" {
      dispatcher = io-2-dispatcher
    }
}  

akka {
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  //loglevel = "DEBUG"
  loglevel = "ERROR"
  stdout-loglevel = "OFF"
  //log-config-on-start = on

  //actor {
  //  debug {
  //    receive = on
  //    autoreceive = on
  //    lifecycle = on
  //    fsm = on
  //    event-stream = on
  //    unhandled = on
  //    router-misconfiguration = on
  //  }
  //}

  remote.netty.tcp.port=0
  remote.netty.tcp.hostname=127.0.0.1

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s
  }

  extensions = ["akka.cluster.client.ClusterClientReceptionist"]

  persistence {
    journal.plugin = "akka.persistence.journal.leveldb-shared"
    journal.leveldb-shared.store {
      # DO NOT USE 'native = off' IN PRODUCTION !!!
      native = off
      dir = "target/shared-journal"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }

}
